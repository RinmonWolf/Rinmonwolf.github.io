<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>YSDAILY - 01 - One Day</title>
      <link href="/2021/10/23/ysdaily-01-oneday/"/>
      <url>/2021/10/23/ysdaily-01-oneday/</url>
      
        <content type="html"><![CDATA[<p><strong>放在前面：</strong></p><p>小短篇——当番外看就行XD。</p><h2 id="Cut1"><a href="#Cut1" class="headerlink" title="Cut1"></a>Cut1</h2><p>刺眼的阳光从屋内照进来，犹如往常一样，透过桌上的玻璃杯折射出绚烂的光。</p><p>已经到往常起床的时候了。他勉强睁开惺忪的眼睛，伸了个大懒腰。窗外依然是那片风景——21世纪式的建筑群，和那些被修剪得美轮美奂的绿化带——或许该叫“小区”？</p><p>“毛又乱了啊……”他狼狈地爬起来后，对着镜子里凌乱的自己再次感叹道，尔后拿起旁边的顺毛刷，熟练地给自己顺着毛。看着刷子里已经堆满一层的毛，他摇摇头，拨弄下来准备拿到专门放毛毛的盒子里。</p><p>和以往一样，今天的他又习惯性伸手在书桌上摸索手机，可是只有一团空气被抓在手中。</p><p>“还是没法习惯没有手机的生活啊……”</p><p>“虽然我很喜欢毛茸茸的生活。”</p><p>“只不过为什么呢，袁湘浩还叫袁湘浩？”</p><h2 id="Cut2"><a href="#Cut2" class="headerlink" title="Cut2"></a>Cut2</h2><p>照常洗漱后，他开始思考今天该吃什么。</p><p>“鸡蛋？吃三个早上了，不行不行。大白菜？哎呀不要都吃了两个星期了。为什么不能吃肉啊！！”</p><p>可惜这些内心的哀嚎都没人能听到，但也该庆幸——在这里，肉食动物说想吃肉都得被抓去问话。</p><p>最终，他忍着心痛，拿出在这里卖100块一盒的植物肉，为犒劳自己的一天选了一个好的开头。</p><p>戴上拟人手套，洗锅，开火，热油……照着记忆，略有笨拙地摆动着锅铲，他正为美好一天的开始做着努力。</p><p>“滋滋滋滋滋滋……”熟悉的煎肉声伴着油花的香气，不断刺激着他的感官。口水不知不觉落了几滴在昨天刚仔细擦过的地板上。</p><p>终于，这些肉带着诱人的颜色被他端上了餐桌。又热了热昨晚剩下的大白菜（没错他居然还剩了些），他已经迫不及待要大口吃肉了。</p><p>等最后才热好的面包（他似乎不喜欢用吐司机）出炉，他的口水已经在厨房的地板再次形成了痕迹。</p><p>夹上热腾腾的肉和菜，一口咬下，整个面包已然没了一大半。他眼中隐藏不住的激动，便是这顿早餐遮掩不住的美味的最好证明。</p><p>做饭用了十五分钟，但是解决这顿早餐却只用了不到一分钟的他感到意犹未尽，但却舍不得再开一盒植物肉了——虽然每个月都有笔陌生的收入，但是他一直存着不敢用；反而自己打工的收入少得可怜，这让他不得不尽量的勤俭些。</p><p>“铃铃铃——铃铃铃——铃铃铃——”客厅角落的老式电话机不合时宜地响了起来，他连忙放下刚想拿去洗碗槽的碗筷，未脱下围裙就火急火燎地去听了电话。</p><p>“喂？浩吗？就是你今天不刚好放假，有空出来玩吗？啊好啊，等下就出来吧，中心广场可以吗？好哦，等会见啦～”</p><p>是好友袁思晨的电话。既然有邀，多一个人——现在应该说兽吗？虽然这里本地也用人来自称——一起玩是再好不过。</p><p>无论来这里多久，拟人手套一直是他用不习惯的东西，虽然他以前就是人。刚开始用这个不成熟的产品的时候，他直接打碎了家里半成以上的碗碟，当时收拾狼藉的他差点就把这个手套丢掉了。直到现在，需要藏起爪子的工作全部都要戴上手套，而只有这个手套能收起爪子，但相对的，非常笨拙。所以今天的他，依然是在无尽的抱怨中用着这个手套洗碗洗锅。</p><p>阳台上挂着昨天刚收到的衣服——一套很可爱的柴柴运动装。但是不得不说，这种衣服就和在人类世界里印着人头的服装一样略显奇怪。可没办法，作为人类的灵魂，他还是更喜欢小动物（实际也包括现在的他自己）。</p><p>他取下了这套衣服，余光顺便撇向对楼的阳台——依然没有晾晒的东西，也没有见到人。但总是能听见邻居们讨论那户人家分享的趣事，这令他总是怀疑是否自己听错了楼号。</p><p>换上这身衣服的他对自己非常满意，在镜子前多转了几圈欣赏了许久，才想起来还有半个小时就要到见面时间了。在镜子前简单收拾了一下自己，抓起背包和钥匙就飞奔出了门。</p><h2 id="Cut3"><a href="#Cut3" class="headerlink" title="Cut3"></a>Cut3</h2><p>“开往 塘口下 的列车即将进站，请乘客们做好准备，在车门两侧有序候车。请注意，本班列车不到达 塘口 及以后的站，前往这些站的乘客请等候下一班列车。……”好不容易跑到地铁站的他气喘吁吁地在车门前清点东西：“钥匙、公交卡、电话卡、钱包……”</p><p>“叮咚、叮咚、叮咚。”列车开门的声音将他拉回了现实。虽然这辆是高峰期区间车，但很明显还没有到高峰站点，这样想着的他很容易地找到了心仪的座位坐了下来。如同往常一样，他依然不习惯尾巴被压住的感觉，所以只能把尾巴和包包一起抱住，避免尾巴乱串。</p><p>“欢迎乘坐南水地铁4号线。本班列车由 山前 开往 塘口下。请站稳扶好。下一站是 东城文化广场北，请需要下车的乘客做好准备。列车运行方向 左侧 的车门将会打开。……”</p><p>他并没有察觉的自己照常坐反了方向，直到……</p><p>“乘客们，本次列车的终点站 塘口下 到了……”“啊？？？？？”</p><p>“乘客们，城区中心广场南 到了……”过了二十多分钟，他迷迷糊糊地终于来到了目的地。还好反向的车同样有高峰车，所以迟到的时间不算长。</p><p>没一会，一路大汗淋漓的他终于跑到了二人每次见面的甜点店。果不其然，思晨在熟悉的位置等着他。</p><p>思晨也注意到了他——一进来就贯口般点了两个草莓蛋糕和一杯鲜榨芒果汁的奇怪顾客——招手叫着他：“终于来了啊，还以为你要毁约呢。”“才不会，我只是……”“只是啥，又坐反地铁啦？”“哎哎哎你别说了，好丢脸啊……”看着他的狼头耷拉着的样子，思晨忍不住笑了出来。</p><p>这家甜点店成为他们每次见面的地点不是没有原因的：奶油恰到好处，甜酸适中，而且没有他讨厌的工业香精味——在人类世界他最讨厌的味道。两人有说有笑，但也不妨碍他们十分钟就解决了今天的小甜点。</p><p>“我跟你讲哦，陈主管昨天又和学校老师一样说啊，我们要和学生时代一样，朝气蓬勃的完成周末剩余的工作啊。我看就是平常加班还不够咯，反正我的KPI干完了，不理了，爱咋咋地。……”“昨天晚上看星星淘淘购（本地电视台的电视推广节目），他们在介绍一个好奇葩的玩偶诶，要不要改天去那家店看看？……”他们拿着刚在甜品店没喝完的饮品，边在购物广场琳琅满目旁欢声笑语。或许过几天的他回想起来，又会感叹人类世界他没有深交朋友这回事。</p><p>“甜甜酸酸的薯条～原生态入锅前调味～天然健康的甜酸薯条不来一点吗～”</p><p>什么？我不能自己点番茄酱吗？为什么要入锅前调味啦！他不禁在心里感叹道，却没敢跟旁边买了两包的思晨吐槽——毕竟他吃的挺香的。</p><p>“你不来点吗？很好吃的哦，我经常来买这家的薯条呢。”思晨把手上的薯条递了过来，而旁边的湘浩仍然有些犹豫：“毕竟我还是更喜欢原味……？”话音未落，思晨刚扔掉饮料的手突然拿着几根薯条塞进了他的嘴里，他完全没反应过来便不由自主嚼了起来。</p><p>“哇！！！怎么能这么好吃啊！！！”他还没吃完便已发出了感叹，实在是没想到这种在人类世界听起来就是智商税的产品居然会如此好吃。这也让他得到一个教训：穿越之后果然不要拿以前的评判标准果断肯定这个世界的事物——特别是食物啊。</p><p>出了这个购物广场，思晨手上只提了一袋子定期采购的零食；可湘浩手上却不止那么点：刚刚非常好吃的薯条就买了五大份（不知道这个没钱人傻天天冲动消费的家伙看到几个小时后吃到撑只能放冰箱的他自己是什么想法）、惯例采购的零食——当然比思晨的多了一倍、这个广场特供的特价保鲜菜也买了两个星期的量——中心广场有补贴优惠，加上这种保鲜菜真的能放很久……</p><p>如此，他稍稍摆了下提不起来的手与思晨道别，坐上了回家的地铁。又连拖带走地提着这一大堆东西走了两公里路爬了五层的楼回到了家里。</p><h2 id="Cut4"><a href="#Cut4" class="headerlink" title="Cut4"></a>Cut4</h2><p>回到家已是下午四点，要着手准备晚餐的时候了。可刚刚拿回五大份薯条的他正在要不要做晚餐的问题中思来想去。看着几乎摆满半个桌子的薯条他无可奈何，决定还是做一点配菜伴着薯条当做晚餐。决定做菜后他打开冰箱，把刚放进去的菜拿了一捆出来。</p><p>手上的菜从一捆变成一条条，最后在炒锅中蜷缩软化，端上桌的已然是色泽诱人的朴实炒菜。</p><p>他也有些许累了，关上抽油烟机，解下与他格格不入的粉色围裙，拿出一份薯条倒进了大饭盆里，准备今晚边看电视边吃这餐简单却足够饱腹（甚至会撑）的晚餐。</p><p>“这款产品真的太实惠啦……”四点半，恰好是当地电视台长广告先行的时候。他换了三五个台，才终于找到还在播放电视剧的电视台。</p><p>他边吃边看着电视，毕竟这是这边唯一比较接近人类世界的宅家娱乐方式。尽管电视里面放着的是看过几百次的老套剧情，但起码有的看就不错了。</p><p>不知不觉，一碗薯条吃完了，第二碗、第三碗也吃完了。可是吃到快吃不下的他看着桌子上还剩下的两份薯条，不禁想把当时买五大份的自己打一顿。只多吃了半份他就完全吃不下了，只能把剩下的塞进冰箱，留着宵夜或者什么时候吃。</p><p>夜色在吃晚餐的时候也已经悄然降临，窗外最后一丝晚霞被风吹散，回到太阳的身边。月亮已然躲在云的后面悄悄反射着太阳的光亮，而城市却不需要月光的微弱，而迫切的需要电力带来的白昼般明亮。吹散晚霞的风此时正与楼下的树叶卿卿我我，树叶抵挡不住风的热烈追求，便与他私奔去了。</p><p>他洗着碗，听着电视里的新闻晚报，准备结束美好的一天。</p><p>“殷报社消息：近日在南水市附近劫掠儿童的连环杀人犯嫌疑人现已于今日凌晨抓获，此案共涉及到25名6～14岁儿童以及4名成年人，其中被害28人，唯一存活者现仍然处于神智不清状态。目前嫌疑人正在接受调查。更多后续新闻请持续追踪本台报道。……”</p><p>此事已发酵许久，今天似乎终于要见个水落石出了。最近这段时间连夜班都不让上了，就是因为公司各个员工都害怕被这个杀人犯干掉。他听到后寻思着，也没有仔细思索为什么开着电视的房间突然因为电视屏幕的照耀而大红大紫。“可能只是画面血腥吧。”</p><p>碗筷洗完了，他准备晚上打几把游戏就睡觉。他边想着要打什么游戏，边拉开了游戏碟的存放柜。最终他决定玩这张《喵喵大闯关 青春版》。没错这已经有青春版的叫法了，而且名顾其实的，这张碟片只有普通版的两条线路，剩下的要不就是买普通版，甚至买豪华版才有。</p><p>“喵～”碟片终于读完了，拿着手柄坐在地板上的他迫不及待地玩了起来。鉴于这个游戏没有存档功能（存档功能需要购买豪华版和专属外置配件），他直接冲上了第五关，准备接受第二个Boss的洗礼。</p><p>“喵——喵！”他娴熟的技法很快就打到了Boss家门口。刚准备进去，就发现自己摔进了门口的陷阱……</p><p>“啊啊啊啊啊啊啊！！！！！”“吵什么吵啊，几点啦都！你不睡觉别人不用睡的啊！”虽然是很快速就打到了Boss家门口，但是他没发现早已过去了两个小时——也就是九点半，这个大部分老旧小区的人们入睡的时间。</p><p>“啊啊好吧，该睡觉了。”看着挂钟上的指针，他无奈地收拾起东西，准备睡觉。</p><p>快速洗完澡，在浴室门口吹了十分钟的毛后，他终于躺到了床上。看着依然灯火通明的新城区，湘浩不禁想到在自己的世界的时候那些工作到通宵的青年们。</p><p>“晚安啦。”湘浩拉上窗帘对自己说道。</p><p>“可是，我为什么会来到这里呢？”</p>]]></content>
      
      
      <categories>
          
          <category> YSDALIY </category>
          
      </categories>
      
      
        <tags>
            
            <tag> YSDAILY </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo + Github = 年轻人的第一个博客</title>
      <link href="/2021/10/21/jian-zhan-guo-cheng-ji-lu/"/>
      <url>/2021/10/21/jian-zhan-guo-cheng-ji-lu/</url>
      
        <content type="html"><![CDATA[<p>这篇文章就简要记录下本站建立的过程。</p><p>因以这种方式搭建是相对自由、简单、便宜（不用为托管付费，除非你弄着弄着生气砸了键盘可能就贵了）的。我就大胆叫了个“年轻人的第一个博客”。</p><p>首先声明：本文前半部分（建站）参考<a href="https://zhuanlan.zhihu.com/p/37826880">十分钟建好托管在GitHub上的个人网站</a>撰写，非常感谢此文在我建立本站时提供的帮助。如我有部分说的不详尽的地方也希望大家优先参考这篇文章。</p><hr><h2 id="放在前面"><a href="#放在前面" class="headerlink" title="放在前面"></a>放在前面</h2><p>首先介绍一下<a href="https://hexo.io/">Hexo</a>和<a href="GitHub.com">Github</a>是个啥。</p><p>Hexo，官网介绍其是快速、简洁、高效的博客框架。事实也证明，相比我之前使用的WordPress，Hexo在部署、文件处理上明显更高效。选用其也是因为其使用者较多，出现问题寻找解决方案也相对容易。<del>（其实就是因为我第一个搜到了Hexo所以就用了）</del></p><p>Github，一个代码托管平台。其功能繁多，用户颇多。此处我们使用的是其网站托管服务（是这么叫吧？）。需要注意的是，本服务只能托管静态网页，就是说你不能在博客里对博客进行修改（无论页面样式还是文章）。一般来说只能在部署设备上进行对博客的修改。曲线救国的方式就是在Github上添加文章，当然请记得保存好文件，等到能够使用部署的设备上时重新放进去。</p><p>至于效果，就是这个博客了。</p><hr><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>物理上，请准备：</p><ul><li><p>一个可联网、使用浏览器的设备（通俗说法：手机电脑都可以，拿来登录和测试仓库网站）</p></li><li><p>一个准备部署本地博客的设备（通俗说法：最好是电脑，你手机有终端能装ARM版的Node.js、Git理论也行，但是可能写博客没电脑那么方便，毕竟还要处理图片啥的）</p><p>当然，上面两个可以是同一台设备。当然如果你想分开也是没问题的。</p></li></ul><p>心理上，请准备：</p><ul><li>随时重来</li><li>细心</li><li>在搜索引擎搜索本文没有提到的问题之解决方案</li></ul><hr><h2 id="本地工作"><a href="#本地工作" class="headerlink" title="本地工作"></a>本地工作</h2><p>我们先准备好本地的Hexo，之后会推到云端上。</p><h3 id="下载Hexo……之前？"><a href="#下载Hexo……之前？" class="headerlink" title="下载Hexo……之前？"></a>下载Hexo……之前？</h3><p>是的，下载Hexo之前，我们还需要安装两个工具才能继续工作。</p><p>这两个工具是<a href="https://nodejs.org/en/"><strong>Node.js</strong></a>和<a href="https://git-scm.com/"><strong>Git</strong></a>，前者是JavaScript运行环境，后者是一个分布式版本控制系统（吧？）。在我所使用的macOS上后者已经存在。此处简单介绍一下如何安装这两个应用。</p><p>在下载之前，最好使用</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> --version<span class="token comment"># 查看npm的版本</span><span class="token function">git</span> --version<span class="token comment"># 查看git的版本</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>或其他方式确认是否已经安装。如未安装，请往下看。</p><p><img src="/media/images/BuildWeb/01.png" alt="像我这样就是安装好了"></p><p>首先下载Node.js。点击上面的超链接，进入Node.js的主页。如果页面正确显示了你的系统，就按下左边的适用大多数用户的版本的下载按钮即可。如有需要可以选择右边的版本。</p><p><img src="/media/images/BuildWeb/02.png" alt="Node.js"></p><p>下载后手动安装即可。</p><p>此处方法是手动下载安装包。<a href="https://clwy.cn/video/chapters/node-express-nvm/info">有博主说</a>这样安装会导致换版本较困难。如果你想解决这个问题，可以使用nvm安装。</p><p>如果你想使用nvm安装，建议参考<a href="https://zhuanlan.zhihu.com/p/37826880">十分钟建好托管在GitHub上的个人网站</a>。我用的是安装包安装所以没有尝试。</p><p>而后安装Git，如已安装则可跳过此步。同样点击上面的超链接进入Git主页，随后选择Download，按照提示操作（如有）即可。</p><p><img src="/media/images/BuildWeb/03.png" alt="Git"></p><p>重新运行上面的指令，如果都弹出版本信息了的话，两个工具就安装成功了。</p><h3 id="下载并部署Hexo"><a href="#下载并部署Hexo" class="headerlink" title="下载并部署Hexo"></a>下载并部署Hexo</h3><p>接下来下载Hexo。在任意位置的终端输入</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">npm</span> <span class="token function">install</span> -g hexo<span class="token comment"># 使用npm安装hexo</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>等待进度条走完就下载成功了。</p><p><img src="/media/images/BuildWeb/04.gif" alt="下载Hexo"></p><p>然后，找一个你喜欢的位置建立一个任意名字的新文件夹来放置你的本地网站并在终端进入。用访达/资源管理器等GUI建立大概率是没问题的。</p><p>下面，提供一个使用纯终端建立位于用户文件夹下的Hexo文件夹的指令范例。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ls</span><span class="token comment"># 查看当前目录有什么文件夹以确认当前目录，虽然通常user@computer folder也会告诉你现在在哪</span><span class="token function">mkdir</span> hexo<span class="token comment"># 因为macOS终端默认就位于用户文件夹下，所以无需切换目录。如果需要切换到如Document、Desktop等文件夹下，可使用cd Document或cd Desktop切换。</span><span class="token builtin class-name">cd</span> hexo<span class="token comment"># 进入hexo文件夹</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/media/images/BuildWeb/05.png" alt="建立hexo文件夹"></p><p>这样，文件夹就建立好了。</p><p><img src="/media/images/BuildWeb/06.png" alt="hexo文件夹"></p><p>如果你选择使用GUI建立文件夹，亦可按照以下步骤进行。</p><ol><li><p>在你想要的地方建立hexo文件夹；</p></li><li><p>在终端输入</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> <span class="token comment"># 此处cd后面有空格</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>后将文件夹拖进终端</p></li></ol><p><img src="/media/images/BuildWeb/07.gif" alt="GUI建立hexo文件夹"></p><p>现在，你已经在终端中进入了hexo文件夹，接下来就是将Hexo安装进去了。</p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>在hexo目录下输入</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo init<span class="token function">npm</span> <span class="token function">install</span><span class="token comment"># 安装Hexo</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/media/images/BuildWeb/08.gif" alt="安装Hexo"></p><p>此时在hexo文件夹可以看到Hexo的文件已经被安装进来了。</p><p><img src="/media/images/BuildWeb/09.png" alt="现在的hexo目录"></p><p>接下来，继续输入</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo g <span class="token comment"># 让Hexo生成静态网页，此处指令为简写</span>hexo s<span class="token comment"># 启动Hexo本地服务器，同上</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/media/images/BuildWeb/10.gif" alt="生成网页"></p><p><img src="/media/images/BuildWeb/17.png" alt="运行中的本地Hexo服务器"></p><p>然后，你会在终端窗口看到一个链接<a href="http://localhost:4000。打开这个链接，你就能看到部署在你本地设备上的网站了！">http://localhost:4000。打开这个链接，你就能看到部署在你本地设备上的网站了！</a></p><p><img src="/media/images/BuildWeb/11.png" alt="你的Hexo网站"></p><hr><h2 id="线上工作"><a href="#线上工作" class="headerlink" title="线上工作"></a>线上工作</h2><p>然后，我们开始着手云端的工作。</p><h3 id="注册GitHub账号"><a href="#注册GitHub账号" class="headerlink" title="注册GitHub账号"></a>注册GitHub账号</h3><p>首先，我们需要<a href="github.com">Github</a>的托管服务，那么就需要一个Github的账号。如果有了就跳到建立仓库页面。</p><p>点击上面的超链接进入Github官网，点击右上角的Sigh Up进入注册页面，随后跟着提示走（不会英文可以用翻译器）即可。</p><p><img src="/media/images/BuildWeb/12.png" alt="注册好的账号应该长这样"></p><h3 id="建立你的仓库"><a href="#建立你的仓库" class="headerlink" title="建立你的仓库"></a>建立你的仓库</h3><p>随后点击右上角你的头像，在点击Your repositories进入你的仓库页面。</p><p><img src="/media/images/BuildWeb/13.png" alt="点击Your repositories"></p><p><img src="/media/images/BuildWeb/14.png" alt="我的仓库页面长这样"></p><p>随后点击右上角New，新建一个仓库。</p><p>Repository name需要填写成你的用户名.github.io的格式。否则将会面临需要子页面才能访问仓库网页的问题。</p><p>这里因为我有一个仓库了，先用YuanXH给大家做示范。</p><p>填写好名字后点击Create repository即可。</p><p><img src="/media/images/BuildWeb/15.png" alt="就填个名字就行"></p><p>接下来你就进到了你这个仓库的主页。</p><p><img src="/media/images/BuildWeb/16.png" alt="仓库主页"></p><h3 id="用SSH钥匙以方便的推送网站"><a href="#用SSH钥匙以方便的推送网站" class="headerlink" title="用SSH钥匙以方便的推送网站"></a>用SSH钥匙以方便的推送网站</h3><p>接下来，我们根据<a href="https://docs.github.com/cn/authentication/connecting-to-github-with-ssh">Github官方给出的SSH相关说明</a>生成并让电脑与Github进行连接。</p><p>（写着写着发现自己真的抄所以就没继续写了……）</p><p>完成上述步骤后，打开你的Hexo文件夹，找到_config.yml文件。</p><p><img src="/media/images/BuildWeb/18.png" alt="hexo文件夹中的config文件"></p><p>打开它。翻到文件末尾（一般是）找到deploy父设置项。</p><p>按照下列范例填写：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">deploy:  type: <span class="token function">git</span>  repository: git@github.com:用户名/用户名.github.io.git  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>其中请注意：</p><ul><li>父设置项冒号后面可以没有空格；</li><li><strong>子设置项冒号后面必须有空格</strong>。</li><li><em><strong>因为是子设置项，<a href="https://www.jianshu.com/p/0ab9c55a9ee2">请在前面放置一到两个空格避免出现错误</a>。</strong></em></li><li>Repository链接可以拷贝你在GitHub仓库中Quick Setup的SSH链接。</li></ul><p><img src="/media/images/BuildWeb/19.png" alt="SSH链接"></p><p><img src="/media/images/BuildWeb/20.png" alt="写好应该是这样的"></p><p>此时，如果你想顺便改下名字啥的，没有问题。但是请按照规范/暂时不改。如果真的想改，请跳转到本文的网站基础设置段。</p><h3 id="部署网站到仓库"><a href="#部署网站到仓库" class="headerlink" title="部署网站到仓库"></a>部署网站到仓库</h3><p>接下来，如果你刚刚的终端没关上，那太好了；甚至如果你没关上服务，那你现在应该按Ctrl+C（这是我的macOS上出现的，请根据终端内文字提示按，不要乱按）退出本地网站服务。</p><p>在终端内输入（记得在hexo文件夹，我就是因为没有在文件夹里安装导致在电脑不知名的角落留下了很多安装残留垃圾）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save<span class="token comment"># 安装SSH部署服务</span>hexo d<span class="token comment"># 让hexo部署到仓库</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/media/images/BuildWeb/21.gif" alt="部署成功"></p><p>此时，你应该能在你的仓库里看到你部署上去的网页文件了。</p><p><img src="/media/images/BuildWeb/22.png" alt="仓库现在的样子"></p><h3 id="最后的步骤"><a href="#最后的步骤" class="headerlink" title="最后的步骤"></a>最后的步骤</h3><p>跟着我们检查设置。点按仓库网页中仓库名字下的Settings。</p><p>如果没错的话，你进到了这个页面。</p><p><img src="/media/images/BuildWeb/23.png" alt="仓库设置"></p><p>在左边侧边栏找到Pages，点进去。随后点击页面中Source下的下拉框，选择master后按下Save保存。</p><p><img src="/media/images/BuildWeb/24.png" alt="设置GitHub Pages访问master"></p><p>如果需要其他链接访问，请阅读</p><p>接下来，不出意外的话，点击页面上</p><blockquote><p>Your site is ready to be published at https://用户名.github.io/</p></blockquote><p>中的链接就可以看到你刚刚在本地看到的一样的网页了。</p><p><img src="/media/images/BuildWeb/25.png" alt="出来ㄌ……？为啥没有样式了！"></p><p>如果是404，那么请检查上面步骤任何一点，特别特别特别是<strong>大小写、缩进、Git链接正确与否</strong>等问题。</p><p>如果发现链接变成了https://用户名.github.io/XXX.github.io，那你大概率要检查一下你<strong>仓库的用户名有没有写对</strong>了，我就因为把n打成m调试了将近半小时多还请教Kineks（请见友情链接列表）才发现是仓库名字的问题……只不过用此方法可以在子页面实现一个账户多个网站的效果，按需使用啦。</p><p>如果发现<a href="https://blog.csdn.net/weixin_45106105/article/details/107199231">文字出来了但是图片、页面样式什么的都不见了（如上图）</a>也不用害怕，我们接下来就处理这个。 </p><hr><h2 id="网站基础设置"><a href="#网站基础设置" class="headerlink" title="网站基础设置"></a>网站基础设置</h2><p>现在，我们开始继续改动Hexo的config。</p><p>但在此之前，我还是想说几句：</p><ul><li>请尽量做三五行的改动就进行备份或者运行确认没问题后再进行改动，这对新手至关重要。</li><li>用英文输入法是最好的，因为可能就一个标点导致了服务错误。</li><li>请注意缩进的问题。有些缩进可能靠足量的空格，可能靠Tab缩进符。请按需使用。</li><li>除了必要测试，<strong>千万不要每试验一次就往服务器上怼</strong>，免费服务不是让你这样玩的，一小时超过十次的话GitHub也会过来问你怎么回事的。</li></ul><p><strong>我们现在看到Site设置，也就是第二个选项块（一般来说。第一个是介绍文档的链接。你当然也可以去看这个。）</strong></p><p>title就是你的网站名字了，按你的想法填写。</p><p>subtitle顾名思义是副标题，按需填写。</p><p>description是网页描述，官网文档建议包含网站关键词。</p><p>keywords是网页搜索的关键词，按需求写。</p><p>author就是你——作者了，建议写上。</p><p>language是语言，一般推荐填写你使用的语言，中文简体需要填写zh-CN，中文繁體（正體）需要填寫zh-Hans。</p><p>timezone是网站显示的时区，千万别填写什么Beijing（<a href="https://www.cnblogs.com/mmzuo-798/p/10510225.html">有博主就这样写了</a>）、CST，我就吃了这个亏导致差点找不到问题怎么解决。中国（上海）时区需要填写Asia/Shanghai，其他时区请参考<a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones">这里（英文维基）</a>。</p><p>‘’应该表示留空，反正你需要留空的打个这个上去吧（因为我也是这样的目前没发现问题）。</p><p><img src="/media/images/BuildWeb/26.png" alt="Site设置范例"></p><p><strong>然后我们看到URL——第三个选项块。</strong></p><p>请一定一定注意此处的设置。这就是决定你网页有没有样式的重中之重了。</p><p>拷贝你的网站链接，按照下列格式填写：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//用户名.github.io/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>但是，如果你的网站在子目录，则需要这样填写：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//用户名.github.io/仓库名/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后再添加一行：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">root</span><span class="token punctuation">:</span> /仓库名/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>即可。</p><p><img src="/media/images/BuildWeb/27.png" alt="URL设置范例"></p><p>保存，并且重新部署</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo clean <span class="token operator">&amp;&amp;</span> hexo g <span class="token comment"># 清除文件并部署</span>hexo s<span class="token comment"># 打开本地服务进行本地测试</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/media/images/BuildWeb/28.png" alt="本地测试成功"></p><p>接下来，我们：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo d<span class="token comment"># 部署到仓库</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>稍等几分钟，我们即可在云端页面看到我们刚刚做的更改了。</p><p><img src="/media/images/BuildWeb/29.png" alt="云端测试成功"></p><hr><h2 id="开始写我们的第一篇文章"><a href="#开始写我们的第一篇文章" class="headerlink" title="开始写我们的第一篇文章"></a>开始写我们的第一篇文章</h2><p>终于，我们的网站初见雏形，接下来就可以开始往里面放置内容了。</p><p>如果你想对网站进行美化，可以在<a href="https://hexo.io/themes/">官网</a>查找或在搜索引擎搜索hexo主题或者查看本站的主题<a href="https://github.com/blinkfox/hexo-theme-matery">Matery</a>。</p><h3 id="新建贴文"><a href="#新建贴文" class="headerlink" title="新建贴文"></a>新建贴文</h3><p>首先，依然需要一个hexo目录下的终端。输入</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo n <span class="token string">"新博客"</span><span class="token comment"># 新建一个名为新博客的博客贴文</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>以新建博客。</p><p><img src="/media/images/BuildWeb/30.png" alt="新建博客贴文 "></p><p>随后我们可在hexo目录下的source/_posts找到这个文件</p><p><img src="/media/images/BuildWeb/31.png" alt="“新博客”文件"></p><h3 id="介绍MarkDown"><a href="#介绍MarkDown" class="headerlink" title="介绍MarkDown"></a>介绍MarkDown</h3><p>可以看到，Hexo使用MarkDown格式的文件作为贴文文件。这种格式使用纯文本记录富文本样式，并在特定编辑器/阅读器生效。简单来说，就是平常用的TXT，它能加粗、倾斜字体，并给字体添加标题样式、下划线/删除线效果了。但是如果这时候你用普通文本编辑器打开默认的hello-world贴文的话……</p><p><img src="/media/images/BuildWeb/32.png" alt="会是这样的"></p><p>为什么和你在网站上看到的不一样呢？</p><p>没错，这些“###”之类的便是MarkDown给文字添加格式的关键了。这样，不需要用doc、wps等格式的文件也能让网站丰富多彩了。</p><p>那么，该怎么编辑、怎么看到效果呢？</p><p>这里推荐两个东西，一个是<a href="https://www.jianshu.com/p/f378e3f2e7e1">MarkDown语法示例</a>，一个是<a href="https://typora.io/">Typora</a>。前者提供语法示例，参考其作文即可；后者是一个好看好用上手快界面简洁的MarkDown编辑软件，我就正在用这个软件编写这篇文章。</p><p><img src="/media/images/BuildWeb/33.png" alt="我的Typora"></p><h3 id="我为什么推荐Typora"><a href="#我为什么推荐Typora" class="headerlink" title="我为什么推荐Typora"></a>我为什么推荐Typora</h3><p>这里着点笔墨讲下为什么我推荐用Typora（虽然我没怎么用过其他的，欢迎有其他推荐）。</p><p>我在用这个软件的时候没有什么花里胡哨的功能，一开始甚至只有一个Notepad一样的窗口给你，还是我后来才打开侧边文档列表/大纲功能。</p><p>那怎么看到自己的文本样式呢？你只要写好样式，输入/点击下一个字就会自动生效。简单、不失优雅。</p><p>而在我记忆里，有一个MD编辑器用的是双窗形式——左边源代码右边格式预览。这样做当然有它的好处，但对我来说，我更愿意眼睛一直盯着同一个窗口不用挪开。</p><p>并且实际上，如果你愿意的话你依然可以查看源代码，不熟悉MD的情况下在段落、格式找到自己想要的功能。</p><p>这可能是我遇到过目前最舒适的写作软件。</p><h3 id="编写贴文"><a href="#编写贴文" class="headerlink" title="编写贴文"></a>编写贴文</h3><p>回到正题，现在你应该已经有了自己的MD编辑器了，或者说，你如果愿意不做格式/直接脑补格式，这样的话你用Notepad就够了。</p><p>打开新博客贴文文件，我们可以看到如图的内容：</p><p><img src="/media/images/BuildWeb/34.png" alt="新博客贴文的初始状态"></p><p>其中，文件开头灰色的内容叫Front-matter，可以参考<a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">Matery主题的Readme-CN</a>进行修改。</p><p>这里提供一个我使用的范例。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token font-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> 这是一个标题<span class="token key atrule">date</span><span class="token punctuation">:</span> 2021<span class="token punctuation">-</span>10<span class="token punctuation">-</span>21 HH<span class="token punctuation">:</span>mm<span class="token punctuation">:</span>ss<span class="token key atrule">top</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> &lt;<span class="token tag">!--</span> 是否在置顶推荐中显示，部分主题支持 <span class="token punctuation">-</span><span class="token punctuation">-</span><span class="token punctuation">&gt;</span><span class="token key atrule">hide</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>&lt;<span class="token tag">!--</span> 是否在主页文章中隐藏，部分主题支持 <span class="token punctuation">-</span><span class="token punctuation">-</span><span class="token punctuation">&gt;</span><span class="token key atrule">cover</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>&lt;<span class="token tag">!--</span> 是否在一屏轮播中显示，部分主题支持 <span class="token punctuation">-</span><span class="token punctuation">-</span><span class="token punctuation">&gt;</span><span class="token key atrule">categories</span><span class="token punctuation">:</span> Started&lt;<span class="token tag">!--</span> 文章分类，部分主题支持 <span class="token punctuation">-</span><span class="token punctuation">-</span><span class="token punctuation">&gt;</span><span class="token key atrule">tags</span><span class="token punctuation">:</span>   <span class="token punctuation">-</span> 标签1  <span class="token punctuation">-</span> 标签2</span><span class="token punctuation">---</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>因为我也不知道注释行不行，所以不推荐把我的注释一起写进去，仅供参考用。</p><p>接下来，开始编写我们博客的内容。</p><p>这里提供一个写好的范例，仅供参考。</p><p><img src="/media/images/BuildWeb/35.png" alt="摸"></p><p><img src="/media/images/BuildWeb/36.png" alt="摸鱼的核心"></p><p>如图我们可见<del>摸鱼对人类的重要性</del>大体的MD格式如何。其中六个标题在部分主题中就可以大纲的形式出现，让用户快速定位内容。</p><p>接下来，我们在网页上看看效果如何。</p><p><img src="/media/images/BuildWeb/37.png" alt="所见即所得"></p><p>这样，你的第一篇博客，就成功的写出来了！</p><h3 id="剩下的问题"><a href="#剩下的问题" class="headerlink" title="剩下的问题"></a>剩下的问题</h3><p>如继续美化、添加插件、进阶编辑等，我在这里贴几个网址按需阅读吧。</p><p><a href="https://blog.csdn.net/weixin_46622106/article/details/112059798">搭建博客hexo 安装hexo、配置hexo、hexo主题美化和添加live2d看板娘–详细步骤</a></p><p><a href="https://yanyinhong.github.io/2017/05/02/How-to-insert-image-in-hexo-post/">Hexo博客搭建之在文章中插入图片</a></p><hr><h2 id="放在最后"><a href="#放在最后" class="headerlink" title="放在最后"></a>放在最后</h2><p>写了一整天才写完大致，接下来还有校对、P图等工作要做。维护博客、写贴文真的挺辛苦的。</p><p>总之，写完了，希望能帮到有需要的人。</p><p><strong>感谢你看到这里。</strong></p>]]></content>
      
      
      <categories>
          
          <category> Started </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 初次见面 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>真正的Hello World</title>
      <link href="/2021/10/21/zhen-zheng-de-hello-world/"/>
      <url>/2021/10/21/zhen-zheng-de-hello-world/</url>
      
        <content type="html"><![CDATA[<p>所以呢，这个才是我的Hello World 才对。</p><p>欢迎来到我的博客～</p><hr><h2 id="来自我介绍一下："><a href="#来自我介绍一下：" class="headerlink" title="来自我介绍一下："></a>来自我介绍一下：</h2><p>袁湘浩/RinmonWolf，一般十六岁男子。</p><p>数码/摄影/编程，感兴趣的基本上是这些。</p><p>没有深造的东西，普普通通。</p><hr><h2 id="开博客的目的"><a href="#开博客的目的" class="headerlink" title="开博客的目的"></a>开博客的目的</h2><p>开了两次博客，前两次都是玩玩，所以基本没有什么内容。</p><p>这次呢，打算分享一些自己的学习心得，包括编程但不仅于此。</p><p>也让自己不要忘的那么快。</p><hr><h2 id="更新频率？"><a href="#更新频率？" class="headerlink" title="更新频率？"></a>更新频率？</h2><p>真的说不准，我连视频脚本都没开始写呢。</p><p>2022/03/15更新：可能只会堆一些杂七杂八，如果你看到的话，还是谢谢你啦。</p><p><del>（跑路）</del></p><hr><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>总之，希望我的这些东西能够帮助到你，非常感谢你能够读到这篇、读完这篇文章。</p><p>祝生活不负有心人。</p>]]></content>
      
      
      <categories>
          
          <category> Started </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 初次见面 </tag>
            
            <tag> 箱底 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/10/21/hello-world/"/>
      <url>/2021/10/21/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><p>And, more settings in posts are following. </p><p>img: /source/images/xxx.jpg</p><p>coverImg: /images/1.jpg</p><p>top: false</p>]]></content>
      
      
      <categories>
          
          <category> Started </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 箱底 </tag>
            
            <tag> 新手入门 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
